# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: crud-test
# app and org for use with dashboard.serverless.com
app: my-first-app
org: gaboacosta624

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    StackAlarmTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Stack Alarm Topic

    DatabaseSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: CloudFormation managed DB subnet group.
        SubnetIds:
          - 'subnet-784c871e'
          - 'subnet-3111c010'
          - 'subnet-ca8d1787'
          - 'subnet-74ac7b2b'
          - 'subnet-47c9d779'
          - 'subnet-2bee6225'

    DatabaseCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        Engine: aurora
        MasterUsername: !Ref "DatabaseUsername"
        MasterUserPassword: !Ref "DatabasePassword"
        BackupRetentionPeriod: 7
        PreferredBackupWindow: 01:00-02:00
        PreferredMaintenanceWindow: mon:03:00-mon:04:00
        DBSubnetGroupName: !Ref "DatabaseSubnetGroup"
        VpcSecurityGroupIds:
          - 'sg-33b23e17'

    DatabasePrimaryInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        Engine: aurora
        DBClusterIdentifier: !Ref "DatabaseCluster"
        DBInstanceClass: 'db.r4.large'
        DBSubnetGroupName: !Ref "DatabaseSubnetGroup"

    DatabasePrimaryCPUAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Primary database CPU utilization is over 80%.
        Namespace: AWS/RDS
        MetricName: CPUUtilization
        Unit: Percent
        Statistic: Average
        Period: 300
        EvaluationPeriods: 2
        Threshold: 80
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - Name: DBInstanceIdentifier
            Value: !Ref "DatabasePrimaryInstance"
        AlarmActions:
          - Ref: StackAlarmTopic
        InsufficientDataActions:
          - Ref: StackAlarmTopic

    DatabasePrimaryMemoryAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Primary database freeable memory is under 700MB.
        Namespace: AWS/RDS
        MetricName: FreeableMemory
        Unit: Bytes
        Statistic: Average
        Period: 300
        EvaluationPeriods: 2
        Threshold: 700000000
        ComparisonOperator: LessThanOrEqualToThreshold
        Dimensions:
          - Name: DBInstanceIdentifier
            Value: !Ref "DatabasePrimaryInstance"
        AlarmActions:
          - Ref: StackAlarmTopic
        InsufficientDataActions:
          - Ref: StackAlarmTopic

    DatabasePrimaryReplicationAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Database replication latency is over 200ms.
        Namespace: AWS/RDS
        MetricName: AuroraReplicaLag
        Unit: Milliseconds
        Statistic: Average
        Period: 300
        EvaluationPeriods: 2
        Threshold: 200
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - Name: DBInstanceIdentifier
            Value: !Ref "DatabaseReplicaInstance"
        AlarmActions:
          - Ref: StackAlarmTopic

    DatabaseReplicaInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        Engine: aurora
        DBClusterIdentifier: !Ref "DatabaseCluster"
        DBInstanceClass: 'db.r4.large'
        DBSubnetGroupName: !Ref "DatabaseSubnetGroup"

    DatabaseReplicaCPUAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Replica database CPU utilization is over 80%.
        Namespace: AWS/RDS
        MetricName: CPUUtilization
        Unit: Percent
        Statistic: Average
        Period: 300
        EvaluationPeriods: 2
        Threshold: 80
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - Name: DBInstanceIdentifier
            Value: !Ref "DatabaseReplicaInstance"
        AlarmActions:
          - Ref: StackAlarmTopic
        InsufficientDataActions:
          - Ref: StackAlarmTopic

    DatabaseReplicaMemoryAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Replica database freeable memory is under 700MB.
        Namespace: AWS/RDS
        MetricName: FreeableMemory
        Unit: Bytes
        Statistic: Average
        Period: 300
        EvaluationPeriods: 2
        Threshold: 700000000
        ComparisonOperator: LessThanOrEqualToThreshold
        Dimensions:
          - Name: DBInstanceIdentifier
            Value: !Ref "DatabaseReplicaInstance"
        AlarmActions:
          - Ref: StackAlarmTopic
        InsufficientDataActions:
          - Ref: StackAlarmTopic

    DatabaseReplicaReplicationAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Database replication latency is over 200ms.
        Namespace: AWS/RDS
        MetricName: AuroraReplicaLag
        Unit: Milliseconds
        Statistic: Average
        Period: 300
        EvaluationPeriods: 2
        Threshold: 200
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - Name: DBInstanceIdentifier
            Value: !Ref "DatabaseReplicaInstance"
        AlarmActions:
          - Ref: StackAlarmTopic
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
